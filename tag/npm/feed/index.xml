<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>npm</title>
	<atom:link href="/tag/npm/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>Geology, Maps, and Code</description>
	<lastBuildDate>Fri, 05 Aug 2016 05:10:08 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.4</generator>

<image>
	<url>/wp-content/uploads/2017/02/cropped-JustinGosses_logo-32x32.jpg</url>
	<title>npm</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Nodebots</title>
		<link>/nodebots/</link>
					<comments>/nodebots/#comments</comments>
		
		<dc:creator><![CDATA[Justin]]></dc:creator>
		<pubDate>Sun, 31 Jul 2016 04:32:26 +0000</pubDate>
				<category><![CDATA[code]]></category>
		<category><![CDATA[javascript]]></category>
		<category><![CDATA[learning]]></category>
		<category><![CDATA[meetup]]></category>
		<category><![CDATA[Node.js]]></category>
		<category><![CDATA[npm]]></category>
		<category><![CDATA[Robots]]></category>
		<guid isPermaLink="false">https://54.87.153.110/?p=662</guid>

					<description><![CDATA[Today I got to play with hardware at an International Nodebot Day event put on by NodeJS Houston. It was a lot of fun, and I was surprised by how much got accomplished in less than a day. I used a Tessel2 board from Sparkfun, which comes with linux and Node.js<a class="moretag" href="/nodebots/"> Read more&#8230;</a>]]></description>
										<content:encoded><![CDATA[<p style="text-align: left;">Today I got to play with hardware at an <a href="http://nodebots.io/#nodebots-day">International Nodebot Day</a> event put on by <a href="http://www.nodejshouston.com/">NodeJS Houston</a>. It was a lot of fun, and I was surprised by how much got accomplished in less than a day. I used a <a href="https://tessel.io/">Tessel2</a> board from <a href="https://www.sparkfun.com/nodebots2016">Sparkfun</a>, which comes with linux and Node.js installed. The best thing about the Tessel2 is how quickly you can go from having just parts to having a working project. Unlike the Raspberry Pi and other boards, there is no lengthy initial install process. The OS is pre-installed. The client installs via a single line of code using <a href="https://www.npmjs.com/">NPM</a>. Likewise, getting wifi connection up and running, so you can push code without a wired connection, is a single line of code.</p>
<hr />
<h3 style="text-align: center;">~20 Minutes from Parts to LED on!</h3>
<div id="attachment_702" style="width: 204px" class="wp-caption alignleft"><img aria-describedby="caption-attachment-702" loading="lazy" class="wp-image-702 " src="http://54.87.153.110/wp-content/uploads/2016/07/image6-225x300.png" alt="image6" width="194" height="261" /><p id="caption-attachment-702" class="wp-caption-text">JavaScript code running on my laptop, connects to the Tessel2 board via a USB cable, which makes the LED blink.</p></div>
<div id="attachment_666" style="width: 288px" class="wp-caption alignleft"><img aria-describedby="caption-attachment-666" loading="lazy" class="wp-image-666" src="http://54.87.153.110/wp-content/uploads/2016/07/Screen-Shot-2016-07-30-at-11.51.37-AM.png" alt="screenshot of webpage with controls for sumobot" width="278" height="211" /><p id="caption-attachment-666" class="wp-caption-text">Screenshot of the terminal. The red bar and the number to the right of it shows the current level of the dimmer switch that will control the LED brightness</p></div>
<div id="attachment_704" style="width: 214px" class="wp-caption alignleft"><a href="http://54.87.153.110/wp-content/uploads/2016/07/image7.png"><img aria-describedby="caption-attachment-704" loading="lazy" class="wp-image-704" src="http://54.87.153.110/wp-content/uploads/2016/07/image7-225x300.png" alt="image7" width="204" height="284" /></a><p id="caption-attachment-704" class="wp-caption-text">In this configuration, the brightness of the LED is reported back to the console and changed via a dimmer switch on the bread board.</p></div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<hr />
<h3 style="text-align: center;">Sumobots!</h3>
<p>After several smaller projects to practice writing and deploying code for the Tessel2, we build our main project, a sumobot. At the end of the day, there was a bot vs. bot bracket competition.</p>
<div id="attachment_665" style="width: 535px" class="wp-caption aligncenter"><a href="http://54.87.153.110/wp-content/uploads/2016/07/image4.jpg"><img aria-describedby="caption-attachment-665" loading="lazy" class="wp-image-665" src="http://54.87.153.110/wp-content/uploads/2016/07/image4.jpg" alt="sumobot" width="525" height="563" /></a><p id="caption-attachment-665" class="wp-caption-text">My sumobot. It might have won ugliest sumobot had that been a category. Rubber bands &gt; Elmers Glue for prototyping and impact sports.</p></div>
<div id="attachment_669" style="width: 631px" class="wp-caption aligncenter"><a href="http://54.87.153.110/wp-content/uploads/2016/07/Screen-Shot-2016-07-30-at-9.48.00-PM.png"><img aria-describedby="caption-attachment-669" loading="lazy" class="wp-image-669" src="http://54.87.153.110/wp-content/uploads/2016/07/Screen-Shot-2016-07-30-at-9.48.00-PM.png" alt="Screen Shot 2016-07-30 at 9.48.00 PM" width="621" height="106" /></a><p id="caption-attachment-669" class="wp-caption-text">The sumobot was controlled via a webpage served from the bot and running on my phone. This is a screenshot of those controls.</p></div>
<div id="attachment_674" style="width: 582px" class="wp-caption aligncenter"><a href="http://54.87.153.110/wp-content/uploads/2016/07/Nodebots_img_0283.jpg"><img aria-describedby="caption-attachment-674" loading="lazy" class="wp-image-674" src="http://54.87.153.110/wp-content/uploads/2016/07/Nodebots_img_0283.jpg" alt="Nodebots_img_0283" width="572" height="419" /></a><p id="caption-attachment-674" class="wp-caption-text">The object is to push the other bot off the platform. Someone is about to lose.</p></div>
<div id="attachment_706" style="width: 650px" class="wp-caption aligncenter"><a href="http://54.87.153.110/wp-content/uploads/2016/07/image2.png"><img aria-describedby="caption-attachment-706" loading="lazy" class="wp-image-706 size-large" src="http://54.87.153.110/wp-content/uploads/2016/07/image2-1024x1024.png" alt="" width="640" height="640" srcset="/wp-content/uploads/2016/07/image2-1024x1024.png 1024w, /wp-content/uploads/2016/07/image2-150x150.png 150w, /wp-content/uploads/2016/07/image2-300x300.png 300w, /wp-content/uploads/2016/07/image2-250x250.png 250w, /wp-content/uploads/2016/07/image2-174x174.png 174w" sizes="(max-width: 640px) 100vw, 640px" /></a><p id="caption-attachment-706" class="wp-caption-text">All the sumobots that took part in the competition.</p></div>
<hr />
<h3 style="text-align: center;">Instructions</h3>
<p>The following instructions should be all the information you need to try out a few small projects and then build a sumobot.</p>
<ul>
<li>Sparkfun sells a <a href="https://www.sparkfun.com/nodebots2016">kit</a> that looks to be everything I got at nodebots day and a extra pieces.</li>
<li><a href="http://-/ https://github.com/dtex/nbd2016">Slides</a> and code by Donovan Buck, who is also a contributor to Johnny-Five. These were presented by Don at the nodebot event and contain information on getting started with the Tessel2. Small code snippets for projects using LEDs and Temperature Sensors are included, as well as some of the information needed to make a sumobot.</li>
<li>The <a href="http://johnny-five.io/">Johnny-Five JavaScript library</a> is used for a variety of boards, including the Tessel2, to control components and sensors using simple and short Node.js commands. The name, of course, comes from the main character of the awesome 1980s robot movie, <a href="https://video.search.yahoo.com/video/play?p=short+circuit&amp;vid=e4950ccf787392775fe636d5472ba792&amp;turl=https%3A%2F%2Ftse1.mm.bing.net%2Fth%3Fid%3DOVP.V778995e347f8a355908ef04d2e3b9850%26pid%3D15.1%26h%3D227%26w%3D300%26c%3D7%26rs%3D1&amp;rurl=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DRBtRVjAMbVo&amp;tit=Short+Circuit+%281986%29+Original+Trailer&amp;c=8&amp;h=227&amp;w=300&amp;l=111&amp;sigr=11bea74jt&amp;sigt=11554fk08&amp;sigi=132mnnsfe&amp;ct=p&amp;age=1259992459&amp;fr2=p%3As%2Cv%3Av&amp;fr=mcafee&amp;tt=b">Short Circuit</a>. The JavaScript files in the Don&#8217;s presentation use Johnny-Five.<a href="http://johnny-five.io/"><img loading="lazy" class="aligncenter wp-image-675" src="http://54.87.153.110/wp-content/uploads/2016/07/johnny-five-fb.png" alt="johnny-five-fb" width="259" height="120" /></a></li>
<li>&#8216;Getting started&#8217; <a href="http://tessel.github.io/t2-start/">instructions</a> from Tessel. These are an additional reference point to what is in Don&#8217;s slides.</li>
<li>For the Sumobot control, I ended up not using the code linked to at the end of Don&#8217;s slides, but rather a <a href="https://github.com/ryanjgill/sumobot.git">repo</a> but together by Ryan Gill, who was at the event. I found Ryan&#8217;s code was easy to get running.</li>
<li>To install &amp; run Ryan&#8217;s sumobot code, I followed these steps (<em>Note: Node.js latest stable version, Tessel2 client, wifi connection, and wifi access point have already been installed and are running based on Don&#8217;s code in the first link</em>):</li>
</ul>
<p style="padding-left: 60px;"><span class="s1">1. Clone the directory: git clone https://github.com/ryanjgill/sumobot.git<br />
</span><span class="s1">2. CD into that directory.<br />
</span><span class="s1">3. In the terminal, type &#8220;npm install&#8221; while inside the directory to install dependencies.<br />
</span><span class="s1">4. Type &#8220;t2 run index.js&#8221;, which should start the program running.<br />
</span><span class="s1">5. At some point in the terminal, you should see &#8220;Server running at http://172./###.###.###:3000&#8221;, which is your bot&#8217;s IP and the port the webpage will be running on. Keep that information, you&#8217;ll need to put that in the browser later to control the bot.<br />
</span><span class="s1">6. Now you should push the code, so that it runs when the Tessel is not connected to your computer by USB. Type, &#8220;t2 push index.js&#8221; into the terminal. After it finishes loading, unplug the USB, switch to onboard battery power, and wait for the board to reboot and wifi to connect.<br />
</span><span class="s1">7. After the blue light on the left side of the tessel2 board is solid blue and the light in the ethernet plug area is solid green, change your computer or phone wifi to be the wifi access point of the bot. (Starting the wifi access point was a previous step described in Don&#8217;s slides mentioned above.) Navigate to the IP address and port from step #5 in your browser of choice. You should see a website that your bot is serving to you through the wifi connection. There will be buttons for forward, reverse, right, and left. Clicking on these buttons will trigger the JS code running on your bot and your bot will move.</span></p>
<hr />
<h3 style="text-align: center;">Lastly, thank you to the sponsors of this event.</h3>
<p>&nbsp;</p>
<p><a href="http://novetta.com/"><img loading="lazy" class="wp-image-676 size-medium aligncenter" src="http://54.87.153.110/wp-content/uploads/2016/07/novetta-300x62.png" alt="novetta" width="300" height="62" srcset="/wp-content/uploads/2016/07/novetta-300x62.png 300w, /wp-content/uploads/2016/07/novetta.png 800w" sizes="(max-width: 300px) 100vw, 300px" /></a>.</p>
<p>&nbsp;</p>
<p><a href="http://54.87.153.110/wp-content/uploads/2016/07/brandextract-splash.jpg"><img loading="lazy" class="size-full wp-image-696 aligncenter" src="http://54.87.153.110/wp-content/uploads/2016/07/brandextract-splash.jpg" alt="brandextract-splash" width="424" height="245" srcset="/wp-content/uploads/2016/07/brandextract-splash.jpg 424w, /wp-content/uploads/2016/07/brandextract-splash-300x173.jpg 300w" sizes="(max-width: 424px) 100vw, 424px" /></a><a href="http://54.87.153.110/wp-content/uploads/2016/07/brandextract-splash.jpg">    </a><a href="http://54.87.153.110/wp-content/uploads/2016/07/chaione_2.png"><img loading="lazy" class="aligncenter size-full wp-image-697" src="http://54.87.153.110/wp-content/uploads/2016/07/chaione_2.png" alt="chaione_2" width="492" height="264" srcset="/wp-content/uploads/2016/07/chaione_2.png 492w, /wp-content/uploads/2016/07/chaione_2-300x161.png 300w" sizes="(max-width: 492px) 100vw, 492px" /></a><a href="https://chaione.com/"><br />
</a></p>
<h3></h3>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h3></h3>
<h3><a href="http://www.uh.edu/"><img loading="lazy" class="aligncenter wp-image-680 size-full" src="http://54.87.153.110/wp-content/uploads/2016/07/uhcs.jpg" alt="uhcs" width="257" height="91" /></a></h3>
<h3 style="text-align: center;"></h3>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h3 style="text-align: center;"></h3>
<h3 style="text-align: center;">and the organizers:</h3>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p style="text-align: center;"><a href="http://54.87.153.110/wp-content/uploads/2016/07/nodejs-houston.png"><img loading="lazy" class="aligncenter size-full wp-image-681" src="http://54.87.153.110/wp-content/uploads/2016/07/nodejs-houston.png" alt="nodejs-houston" width="424" height="228" srcset="/wp-content/uploads/2016/07/nodejs-houston.png 424w, /wp-content/uploads/2016/07/nodejs-houston-300x161.png 300w" sizes="(max-width: 424px) 100vw, 424px" /></a></p>
<p>&nbsp;</p>
]]></content:encoded>
					
					<wfw:commentRss>/nodebots/feed/</wfw:commentRss>
			<slash:comments>3</slash:comments>
		
		
			</item>
		<item>
		<title>Gource &#8211; Log Visualization Tool</title>
		<link>/gource/</link>
					<comments>/gource/#respond</comments>
		
		<dc:creator><![CDATA[Justin]]></dc:creator>
		<pubDate>Mon, 11 Jul 2016 02:54:38 +0000</pubDate>
				<category><![CDATA[code]]></category>
		<category><![CDATA[data visualization]]></category>
		<category><![CDATA[Front-End]]></category>
		<category><![CDATA[Gource]]></category>
		<category><![CDATA[ISS]]></category>
		<category><![CDATA[javascript]]></category>
		<category><![CDATA[Javascript library]]></category>
		<category><![CDATA[NASA]]></category>
		<category><![CDATA[not open]]></category>
		<category><![CDATA[npm]]></category>
		<category><![CDATA[proprietary]]></category>
		<guid isPermaLink="false">https://54.87.153.110/?p=607</guid>

					<description><![CDATA[At work, I put projects I complete into our group&#8217;s gallery of data-visualization work. It is good internal marketing for what our group can deliver. Unfortunately, even behind a NASA firewall, there are some things I can&#8217;t put in the gallery. Examples have included data visualizations of human resource data and<a class="moretag" href="/gource/"> Read more&#8230;</a>]]></description>
										<content:encoded><![CDATA[<p>At work, I put projects I complete into our group&#8217;s gallery of data-visualization work. It is good internal marketing for what our group can deliver. Unfortunately, even behind a NASA firewall, there are some things I can&#8217;t put in the gallery. Examples have included data visualizations of human resource data and financial data where the public release process is laid out by Congress.</p>
<p>One way to still have something cool to show but keep data secure is to turn the process of making the data visualization into another data visualization. One super easy way to do this is to use <a href="http://gource.io/">Gource</a>.</p>
<h3>Gource:</h3>
<p>My favorite thing about<a href="http://gource.io/"> Gource</a> is how easy it is to use. When I first downloaded it, I looked for instructions and couldn’t find any besides how to install it. Turns out, you just type “gource” into the folder of the code you want to visualize, and it does everything else. How great is that. If you use npm, you can install it using <em>npm install gource</em> -g in a terminal.</p>
<p>The small avatar(s) in the video shooting bolts of light are the developers of the project. Each file is a ball of light. Clusters of balls represent folders or directories.  The video is somewhat large, so it might take several seconds to load. If you want to see a Gource visualization of a larger project, check out <a href="https://www.youtube.com/watch?v=aPk1BqK8zzI" target="blank">this</a> youtube video of python development starting in 1990.</p>
<p><video style="visibility: visible;" src="http://54.87.153.110/wp-content/uploads/2016/07/ISSflyOver_1.mov" controls="controls" width="100%" height="100%"></video></p>
<p>Gource video of a small project I wrote while writing the <a href="https://54.87.153.110/issflyover/">previous blog post</a>. I used it to test out the open-notify API, which returns the current latitude and longitude of the International Space Station. The application then takes that lat/long and places it on a map using the <a href="http://leafletjs.com/">leaflet.js</a> library. Every 3 seconds, a new I.S.S. position is added.</p>
]]></content:encoded>
					
					<wfw:commentRss>/gource/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		<enclosure url="http://54.87.153.110/wp-content/uploads/2016/07/ISSflyOver_1.mov" length="7004377" type="video/quicktime" />

			</item>
	</channel>
</rss>
